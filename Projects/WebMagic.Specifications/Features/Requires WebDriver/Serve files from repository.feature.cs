// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.34003
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace WebMagic.Specifications.Features.RequiresWebDriver
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class ServeFilesFromRepositoryFeature : Xunit.IUseFixture<ServeFilesFromRepositoryFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Serve files from repository.feature"
#line hidden
        
        public ServeFilesFromRepositoryFeature()
        {
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Serve files from repository", "As a developer\r\nI want to serve files from a repository", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void SetFixture(ServeFilesFromRepositoryFeature.FixtureData fixtureData)
        {
        }
        
        void System.IDisposable.Dispose()
        {
            this.ScenarioTearDown();
        }
        
        [Xunit.Extensions.TheoryAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Serve files from repository")]
        [Xunit.TraitAttribute("Description", "Correct page url is used")]
        [Xunit.Extensions.InlineDataAttribute("Repository.EmptyAspNetWebApplication", "/", "<h1>/index.md</h1>", new string[0])]
        [Xunit.Extensions.InlineDataAttribute("Repository.EmptyAspNetWebApplication", "/index", "<h1>/index.md</h1>", new string[0])]
        [Xunit.Extensions.InlineDataAttribute("Repository.EmptyAspNetWebApplication", "/page", "<h1>/page.md</h1>", new string[0])]
        [Xunit.Extensions.InlineDataAttribute("Repository.EmptyAspNetWebApplication", "/directory-test", "<h1>/directory-test/index.md</h1>", new string[0])]
        [Xunit.Extensions.InlineDataAttribute("Repository.EmptyAspNetWebApplication", "/directory-test/", "<h1>/directory-test/index.md</h1>", new string[0])]
        [Xunit.Extensions.InlineDataAttribute("Repository.EmptyAspNetWebApplication", "/directory-test/index", "<h1>/directory-test/index.md</h1>", new string[0])]
        [Xunit.Extensions.InlineDataAttribute("Repository.EmptyAspNetWebApplication", "/directory-test/page", "<h1>/directory-test/page.md</h1>", new string[0])]
        public virtual void CorrectPageUrlIsUsed(string websiteProject, string url, string heading, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Correct page url is used", exampleTags);
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
 testRunner.Given(string.Format("the website is {0}", websiteProject), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
 testRunner.When(string.Format("I visit {0}", url), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 8
 testRunner.Then(string.Format("the page should include {0}", heading), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 9
 testRunner.And("the page is rendered with a layout page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                ServeFilesFromRepositoryFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                ServeFilesFromRepositoryFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
